/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

pluginManagement {
    // Include 'plugins build' to define convention plugins.
    includeBuild('build-logic')
}

rootProject.name = 'spring-ai'
include(':spring-ai-core')
include(':spring-ai-openai')
include(':spring-ai-pgvector-store')
include(':spring-ai-azure-openai-spring-boot-starter')
include(':spring-ai-neo4j-store')
include(':spring-ai-azure-openai')
include(':spring-ai-docs')
include(':spring-ai-postgresml-embedding-client')
include(':spring-ai-spring-boot-autoconfigure')
include(':spring-ai-openai-spring-boot-starter')
include(':spring-ai-milvus-store')
project(":spring-ai-pgvector-store").projectDir = file('vector-stores/spring-ai-pgvector-store')
project(":spring-ai-azure-openai-spring-boot-starter").projectDir = file('spring-ai-spring-boot-starters/spring-ai-starter-azure-openai')
project(":spring-ai-neo4j-store").projectDir = file('vector-stores/spring-ai-neo4j-store')
project(":spring-ai-postgresml-embedding-client").projectDir = file('embedding-clients/spring-ai-postgresml-embedding-client')
project(":spring-ai-openai-spring-boot-starter").projectDir = file('spring-ai-spring-boot-starters/spring-ai-starter-openai')
project(":spring-ai-milvus-store").projectDir = file('vector-stores/spring-ai-milvus-store')
